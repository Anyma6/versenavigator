name: Check for duplicate domains in links

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check_links:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Extract links from pull request
        run: |
          git fetch origin main
          git diff origin/main... > pr_links.txt

      - name: Run duplicate domain checker
        id: check_links
        run: |
          python check_links.py > check_links_output.txt || echo "exit_code=1" >> $GITHUB_ENV
        continue-on-error: true

      - name: Check for duplicate domains
        id: parse_output
        run: |
          if grep -q "DUPLICATE_DOMAINS" check_links_output.txt; then
            duplicate_domains=$(cat check_links_output.txt | grep -A1000 'DUPLICATE_DOMAINS' | tail -n +2)
            duplicate_domains="${duplicate_domains//- /}" # Rimuove "- " per evitare errori
            echo "duplicate_domains<<EOF" >> $GITHUB_ENV
            echo "$duplicate_domains" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Comment on pull request with warning if duplicates found
        if: env.exit_code == '1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          duplicate_domains="${{ env.duplicate_domains }}"
          # Escape doppie virgolette per JSON
          duplicate_domains_json=$(echo "$duplicate_domains" | jq -R . | jq -s . | tr -d '\n')
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"⚠️ Potential duplicate domain(s) found in the PR:\n${duplicate_domains_json}\nPlease make sure these resources are not already listed. If this is an error, please open an issue linking this PR.\"}" \
          "${{ github.event.pull_request.url }}/comments"
